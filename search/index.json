{"authors":["Jalil khoironi"],"categories":["Networks","OpenClash","Github","Installation"],"pages":[{"authors":[],"categories":[],"content":"Mac-scan di RouterOS adalah suatu alat untuk keperluan menyurpai alamat mac mana saja yang terhubung di suatu LAN.\nAda kalanya kita kesulitan mengetahui mac manasaja yang terubung pada suatu LAN. Terlebih jika dalam jaringan LAN tersebut terdapat Mangement hostpot. Karna jika terdapat Management hospot kita menggunakan tool-tool lain seperti yang tool yang banyak tersedia contohnya dalam android Alamat mac yang terdeteksi hanya akan menampilkan alamat Mac mikrotik tersebut (server hostpot).\nBagaimana solusinya? disini kita memenfaatkan tool yang di sediakan mikrotik tersebut untuk melist mana saja mac yang terhubung dalam suatu Lan.\nkali ini saya menggunakan mikrotik Sxtsq2nd untuk mencoba menggunakan mac-scanner. Dan bagaimana jika kita tidak mempunyai mikrotik? Bisa menggunakan Mikrotik crack di Virtualbox dengan interface yang terbridge ke LAN Tersebut.\noke langsung saja ke tutuorial. Karna Mac-scan hanya tersedia via terminal maka kita masuk ke mikrotik melalui ssh ataupun via terminal di webfig itu sendiri\njika sudah masuk ke terminal mikrotik kita ketikan perintah\n/tool mac-scan interface=wlan1 Dan jika berhasil akan muncul list Mac beserta ip\nperlu di ingat interface harus di sesuaikan dengan mana yang terhubung ke LAN yang akan kita Scann dan tidak perlu mengatur ip di interface tersebut karna kita akan menscan seluruhnya mana saja mac yang terhubung dalam LAN tersebut.\nArahkan up/down untuk mengetahui seberapa banyak mac yang terlist Dan di sini kita bisa menyimpannya dengan menekan tombol D (Dump), dan kita dapat mengambil nya di file mikrotik. atau lebih jelasnya kita menggunakan ftp untuk mengambilnya di file root mikrotik dengan nama console-dump.txt\nDan hasil mac ini kita bisa gunakan untuk sekedar tujuan ingin mengetahui perangkat yang terhubung ataupun bisa kita gunakan untuk Spoof Mac address pada tutorial selanjutnya.\n","date":"6 Agustus 2022","img":"https://razonyang.github.io/images/rmacscann.png","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/artikel/2022/08/mac-scann-via-routeros-mac-list-discovery-untuk-bypass-filter-hostpot/","series":[{"title":"Artikel","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/artikel/"}],"smallImg":"","tags":[{"title":"Mac Spoof","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/mac-spoof/"},{"title":"Mikrotik","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/mikrotik/"}],"title":"Mac Scann via RouterOS | Mac List Discovery Untuk Bypass Filter Hostpot"},{"authors":[],"categories":[],"content":" ","date":"5 Agustus 2022","img":"https://razonyang.github.io/images/spoofos.png","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/artikel/2022/08/mac-spoof-routeros-nembak-wifi-tetangga-dengan-mac-list/","series":[{"title":"Artikel","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/artikel/"}],"smallImg":"","tags":[{"title":"Mikrotik","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/mikrotik/"},{"title":"Mac Spoof","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/mac-spoof/"}],"title":"Mac Spoof RouterOs | Nembak Wifi Tetangga Dengan Mac List"},{"authors":[],"categories":[],"content":" ","date":"5 Agustus 2022","img":"https://razonyang.github.io/images/macspoof.png","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/artikel/2022/08/spoof-hostpot-mikrotik-otomatis-mencari-mac-address-yang-terhubng-ke-internet/","series":[{"title":"Artikel","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/artikel/"}],"smallImg":"","tags":[{"title":"Mac Spoof","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/mac-spoof/"},{"title":"Mikrotik","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/mikrotik/"}],"title":"Spoof Hostpot Mikrotik | Otomatis Mencari Mac Address Yang Terhubng Ke Internet"},{"authors":[],"categories":[{"title":"Networks","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/categories/networks/"}],"content":"Temukan alamat MAC untuk rentang IP menggunakan ARP\nAlat ini akan menanyakan setiap IP dalam rentang tertentu dan mencetak alamat MAC yang diterima ke keluaran standar. Ini menggunakan protokol ARP. Perangkat yang terhubung ke jaringan yang tidak menggunakan protokol IP tidak akan ditemukan.\nOpsional Anda dapat memberikan daftar alamat MAC untuk menyaring output. Filter dapat diatur untuk menampilkan alamat dalam daftar atau tidak dalam daftar.\nCompile# Alat ini dikompilasi di Linux\n$ gcc findmacs.c -o findmacs Penggunaan# Usage: findmacs [-apxvhV] [-t time] [-r IP/CIDR] [-l filename [-i]] interface -r IP/CIDR Scan this IP range. If not given \u0026lt;localIP\u0026gt;/24 is used -l filename Load MAC addresses listed in \u0026lt;filename\u0026gt; and use them as allowed. Only addresses found in network and not in list will be reported. -t time Set wait-for-reply timeout to \u0026lt;time\u0026gt; milliseconds. Default is 950 ms -i Report MAC addresses found in list (invert report) -a Accept ANY reply, even if it wasn't triggered by us -p Print IP address being queried -x Don't check root privileges -v Increase verbosity level -h Print this help -V Print version and copyright information Contoh keluaran# $ sudo ./findmacs -vr 192.168.0.1/28 eth0 Interface eth0 Local IP 192.168.0.49 Local MAC 94:fg:80:b8:f5:45 Scan range 192.168.0.1/28 00:22:54:e3:c9:91 192.168.0.1 -\u0026gt; 94ðŸ‡©ðŸ‡ª86:a8:f5:45 192.168.0.19 00:19:93:88:5b:54 192.168.0.4 -\u0026gt; 94ðŸ‡©ðŸ‡ª86:a8:f5:45 192.168.0.19 00:22:15:4b:b7:88 192.168.0.6 -\u0026gt; 94ðŸ‡©ðŸ‡ª86:a8:f5:45 192.168.0.19 00:22:4d:38:04:05 192.168.0.7 -\u0026gt; 94ðŸ‡©ðŸ‡ª86:a8:f5:45 192.168.0.19 00:22:13:28:2c:2d 192.168.0.10 -\u0026gt; 94ðŸ‡©ðŸ‡ª86:a8:f5:45 192.168.0.19 00:19:99:33:53:1b 192.168.0.12 -\u0026gt; 94ðŸ‡©ðŸ‡ª86:a8:f5:45 192.168.0.19 00:19:99:83:21:7e 192.168.0.15 -\u0026gt; 94ðŸ‡©ðŸ‡ª86:a8:f5:45 192.168.0.19 Source drkblog\n","date":"15 April 2022","img":"https://razonyang.github.io/images/mac.png","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/artikel/2022/04/discover-alamat-mac-dengan-findmacs/","series":[{"title":"Artikel","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/artikel/"}],"smallImg":"","tags":[{"title":"Mac","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/mac/"},{"title":"FindMacs","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/findmacs/"},{"title":"MacClone","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/macclone/"}],"title":"Discover Alamat MAC Dengan Findmacs"},{"authors":[],"categories":[{"title":"OpenClash","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/categories/openclash/"}],"content":"OpenClash merupakan tool inject yang segudang bermanfaat pasalnya Openclash bisa memisahkan trafik, multi accout inject dan lain sebagai nya.\nPada kesempatan kali ini Admin akan membagikan sebuah cara yang lumayan bermanfaat buat kalian yang ingin coba menggunakan Openclash di Android dengan bantuan aplikasi Termux pastinya tanpa root.\nCara install Openclash di Termux Android# Download Termux# Gunakan Termux Version 0.118.0 yang tersedia di f-droid Ketikan perintah install OpenClash# Pastikan ada koneksi internet copy paste satu persatu (wajib) supaya meminimalisir terjadinya error.\npkg update -y pkg upgrade pkg install nano pkg install git git clone https://github.com/lycoxz/ClashForTermux.git cd ClashForTermux bash install.sh cd Setting akun# Setting Trojan# nano .config/clash/trojan.yaml simpan dengan CTRL +X Y Enter\nSetting Vmess# nano .config/clash/trojan.yaml simpan dengan CTRL +X Y Enter\nSetting Proxy dan Port di APN Android# APN: internet\nProxy : 127.0.0.1\nPort : 7890\nRunning Openclash di Termux# Untuk menjalankan openclash di termux cukup gunakan perintah.\nclash Dan untuk masuk ke yacd copy paste ini di chrome 127.0.0.1:9090/ui/#/proxies\nAtau bisa menggunakan Helmiwrt APK\nNah seperti itu cara install Openclash di andorid dengan termux tanpa root\nsource : https://github.com/lycoxz/ClashForTermux\n","date":"5 April 2022","img":"https://razonyang.github.io/images/openclash-termux.png","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/artikel/2022/04/install-openclash-di-termux/","series":[{"title":"Artikel","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/artikel/"}],"smallImg":"","tags":[{"title":"Termux","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/termux/"}],"title":"Install Openclash Di Termux"},{"authors":[{"title":"Jalil khoironi","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/authors/jalil-khoironi/"}],"categories":[{"title":"Github","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/categories/github/"}],"content":"Langkah berikut untuk melakukan custom domain GitHub, Dan pastikan konfigurasi DNS yang digunakan tepat.\nKonfigurasi DNS# Pertama, Anda bisa login ke Member Area/ Dns record , sebagai contoh disini saya menggunakan Cloudflare, maka masuk ke Dashboard juga bisa mengunakan aplikasi ColdCloud untuk mengatur dns.\nPilih Domain yang akan di gunakan.\nKemudian, pilih Menu DNS\nLangkah berikutnya, Anda bisa klik Add New Record / dalam aplikasi tanda +\nPada bagian Record Type, pastikan pilihannya adalah A Record. Kemudian, Anda bisa mengisikan IP Address yang digunakan oleh GitHUb berikut satu per satu:\n185.199.108.153\n185.199.109.153\n185.199.110.153\n185.199.111.153\nJangan lupa untuk selalu klik Save Record setiap selesai memasukkan data IP Address.\nJika sudah berhasil, semua IP address yang Anda masukkan akan otomatis tercatat pada menu DNS management seperti ini:\nTahapan untuk konfigurasi DNS sudah selesai. Anda cukup menunggu proses propagasi domain terlebih dahulu hingga maksimal 1Ã—24 jam.\nSetting Domain github pages# Setelah berhasil, Buka repostory yang akan di custom domain, Bukan Setting -\u0026gt; Pages. Dan masukan custom domain yang akan digunakan. kemudian klik save, tunggu proses nya hingga muncul tulisan ![Center](/Screenshot_20220401_225429.jpg#width=300px) ","date":"1 April 2022","img":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/images/gpage.jpeg","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/artikel/2022/04/konfigurasi-dns-untuk-custom-domain-github-pages/","series":[{"title":"Artikel","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/artikel/"}],"smallImg":"","tags":[{"title":"Domain","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/domain/"},{"title":"DNS","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/dns/"}],"title":"Konfigurasi DNS Untuk Custom Domain Github Pages"},{"authors":[],"categories":[{"title":"OpenClash","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/categories/openclash/"}],"content":"Bingung dengan format proxy_provider\nShadowsocks# Shadowsocks Original / tanpa plugin - name: \u0026#34;shadowsocks\u0026#34; type: ss server: aaa.bbb.ccc.ddd port: 34963 cipher: chacha20-ietf-poly1305 password: passwordss udp: true Shadowsocks dengan plugin obfs - name: \u0026#34;shadowsocks obfs\u0026#34; type: ss server: aaa.bbb.ccc.ddd port: 32033 cipher: chacha20-ietf-poly1305 password: passwordss plugin: obfs plugin-opts: mode: tls host: BUG.COM Vmess# Vmess websocket dengan BUG SNI - name: \u0026#34;Vmess ws bug SNI\u0026#34; type: vmess server: aaa.bbb.ccc.ddd port: 443 uuid: UUIDMU alterId: 0 cipher: auto udp: true tls: true skip-cert-verify: true servername: BUGSNI.COM network: ws ws-opts: path: /iptunnelscom headers: Host: BUGSNI.COM max-early-data: 2048 early-data-header-name: Sec-WebSocket-Protocol Vmess websocket dengan BUG CDN (bolak-balik) - name: \u0026#34;vmess ws bug CDN\u0026#34; type: vmess server: IPCDN/BUGCDN.COM port: 443 uuid: UUIDMU alterId: 0 cipher: auto udp: true tls: true skip-cert-verify: false servername: namadomainservermu.com network: ws ws-opts: path: /iptunnelscom headers: Host: namadomainservermu.com max-early-data: 2048 early-data-header-name: Sec-WebSocket-Protocol Vmess gRPC bug SNI proxies: - name: vmess grpc SNI server: aaa.bbb.ccc.ddd port: 443 type: vmess uuid: UUIDMU alterId: 0 cipher: auto network: grpc tls: true servername: BUGSNI.COM skip-cert-verify: true grpc-opts: grpc-service-name: grpcpath Vmess gRPC bug CDN proxies: - name: vmess grpc CDN server: IPCDN/BUGCDN.COM port: 443 type: vmess uuid: UUIDMU alterId: 0 cipher: auto network: grpc tls: true servername: namadomainservermu.com skip-cert-verify: false grpc-opts: grpc-service-name: grpcpath Snell# Snell Server v3 (support udp). - name: \u0026#34;snell server\u0026#34; type: snell server: aaa.bbb.ccc.ddd port: 33223 psk: password version: 3 udp: true obfs-opts: mode: tls host: BUGSNI.COM Trojan# Trojan-gfw bug SNI - name: \u0026#34;trojan-gfw SNI\u0026#34; type: trojan server: aaa.bbb.ccc.ddd port: 443 password: PASSWORD udp: true sni: BUGSNI.COM alpn: - h2 - http/1.1 skip-cert-verify: true Trojan-go websocket bug CDN - name: trojan ws cdn server: IPCDN/BUGCDN.COM port: 443 type: trojan password: PASSWORD network: ws sni: namadomainservermu.com skip-cert-verify: false udp: true ws-opts: path: /iptunnelstrgo headers: Host: namadomainservermu.com Trojan gRPC bug SNI - name: \u0026#34;trojan gRPC SNI\u0026#34; type: trojan server: aaa.bbb.ccc.ddd port: 443 password: PASSWORD udp: true sni: BUGSNI.COM alpn: - h2 skip-cert-verify: true network: grpc grpc-opts: grpc-service-name: iptunnelstrojangrpc Trojan gRPC bug CDN - name: \u0026#34;trojan gRPC CDN\u0026#34; type: trojan server: IPCDN/BUGCDN.COM port: 443 password: PASSWORD udp: true sni: namadomainservermu.com alpn: - h2 skip-cert-verify: false network: grpc grpc-opts: grpc-service-name: iptunnelstrojangrpc ","date":"19 Maret 2022","img":"https://razonyang.github.io/images/oc.png","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/artikel/2022/03/setting-proxy_provider-di-openclash/","series":[{"title":"Artikel","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/artikel/"}],"smallImg":"","tags":[{"title":"proxy_provider","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/proxy_provider/"}],"title":"Setting Proxy_provider Di Openclash"},{"authors":[],"categories":[],"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\nhttps://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremely fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","date":"28 Februari 2019","img":"","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/about/","series":[],"smallImg":"","tags":[],"title":"About"},{"authors":[],"categories":[{"title":"Installation","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/categories/installation/"}],"content":"This guide show you how to install on Arch Linux.\n","date":"1 Januari 1","img":"","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/docs/installation/linux/archlinux/","series":[{"title":"Guide","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/guide/"}],"smallImg":"","tags":[{"title":"Linux","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/linux/"},{"title":"Arch Linux","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/arch-linux/"}],"title":"Install on Arch Linux"},{"authors":[],"categories":[],"content":"","date":"1 Januari 1","img":"","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/contact/","series":[],"smallImg":"","tags":[],"title":"Contact Us"},{"authors":[],"categories":[],"content":"A fast, responsive and feature-rich Hugo theme for blog and documentations site.\n","date":"1 Januari 1","img":"","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/docs/introduction/","series":[{"title":"Guide","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/guide/"}],"smallImg":"","tags":[],"title":"Introduction"},{"authors":[],"categories":[],"content":"","date":"1 Januari 1","img":"","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/offline/","series":[],"smallImg":"","tags":[],"title":"Offline"},{"authors":[],"categories":[{"title":"Installation","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/categories/installation/"}],"content":"This guide show you how to install on Ubuntu.\n","date":"1 Januari 1","img":"","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/docs/installation/linux/ubuntu/","series":[{"title":"Guide","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/guide/"}],"smallImg":"","tags":[{"title":"Linux","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/linux/"},{"title":"Ubuntu","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/ubuntu/"}],"title":"Install on Ubuntu"},{"authors":[],"categories":[{"title":"Installation","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/categories/installation/"}],"content":"This guide show you how to install on Windows.\n","date":"1 Januari 1","img":"","lang":"id","largeImg":"","permalink":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/docs/installation/windows/","series":[{"title":"Guide","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/series/guide/"}],"smallImg":"","tags":[{"title":"Windows","url":"https://razonyang.github.io/hugo-theme-bootstrap-skeleton/tags/windows/"}],"title":"Install on Windows"}],"series":["Artikel","Guide"],"tags":["Mac Spoof","Mikrotik","Mac","FindMacs","MacClone","Termux","Domain","DNS","proxy_provider","Linux","Arch Linux","Ubuntu","Windows"]}